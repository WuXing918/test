shell 的条件判断语句：

格式有两种：
	test  -e  /root/install.log
	[ -e /root/install.log ]
	
以上两种格式都是判断install.log 该文件是否存在。 
	注意： 中括号就表示test 不过注意中括号，左右两边必须有个空格。
	
判断有很多种，不同的判断其参数不一样，可以分为以下几类：

1. 文件的类型判断 (是否存在，是目录还是文件)
	[ -d /root/install.log ] 该文件是不是目录并且是否存在。
	[ -e /root/install.log ] 该文件是否存在。
	[ -f /root/install.log ] 该文件是否存在，并且为普通文件。
	等等，其他的判断参数，可以在使用的时候在自行查阅相关资料。
	
	
2. 文件的权限判断
	[ -r /root/install.log ] 该文件是否具有读权限。
	[ -w /root/install.log ] 改文件是否具有写权限。
	[ -x /root/install.log ] 该文件是否具有执行权限。
	
	2.1. 对于上述的判断只要改文件具有 执行，读取，写入权限就行，
		不分是主用户，组用户，还是其他用户，只要其中之一具有该权限都会赶回true。
    2.2. 如果想对某类用户进行权限判断，可以自行写代码进行判断。
		
3. 两个文件的比较
	[ ]


4. 整数之间的比较


5. 字符串之间的比较
	name = 
	[ -z ]
	对于字符串的疑问: 为什么字符串的变量要加上双引号 "";
	
	
6.多重条件判断
	-a     与的意思
	-o     或的意思
	！     非的意思
	
单分支条件判断语句
格式分为两种：
	格式一：
	if [ 条件判断语句 ]; then
		语句块
	fi
	
	格式二：
	if [ 条件判断语句 ]
		then
		语句块
	fi
	
小细节总结：
		1. shell的条件语句if 使用fi结尾 (与一般语言都是以大括号定义结尾不同)
		2. [ 条件判断语句 ] 就是使用test命令判断，所以中括号和条件判断语句之间必须要有空格。
		3. then 后面跟符合条件判断语句之后所要执行的语句块，then可以放在 []之后，用';'分割。
		   也可以换行写入，就不需要';' 分割了。

相关命令学习
	grep  以行为单位进行查找
	cut   以列为单位进行查找
	awk   以列为单位进行查找  
	简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。
	
cut 命令
		-d  ""     -d参数是  指定分隔符代替制表符座位区域分界线 "" 中即使指定的分割符
		-f  num    -f参数是  指定分割后的区域， num 表明是哪个区域 num 是从1开始的。
例子：
		ls -l  | cut -d " " -f 1
		将ls -l 的输出，用空格将行分割，输出分割后的区域1的数据。
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
